swagger: '2.0'
info:
  version: v1
  title: Phantombuster API
  description: >
    The Phantombuster API gives you control over your account. It is composed of
    HTTPS endpoints returning JSON data.


    Here’s a short list of what the API allows\:


    - Launch and abort agents

    - Get console output, status, progress and messages from an agent

    - Get real-time console output from an agent

    - Get user, agent and script records

    - Write scripts

    - ...


    We deliberately made the API extremely simple to use. Any developer should
    be able to get responses in a matter of minutes.
host: phantombuster.com
basePath: /api/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/agent/{id}':
    get:
      tags:
        - Agent
      description: Get an agent record.
      operationId: getAgentRecord
      parameters:
        - name: id
          in: path
          description: ID of the agent to retrieve ending with `.json`.
          required: true
          type: integer
        - name: withScript
          in: query
          description: >-
            If present and not empty, and if the agent has an associated script,
            also return the script record.
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponseNull'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  '/agent/{id}/launch':
    post:
      tags:
        - Agent
      description: Add an agent to the launch queue.
      operationId: launchAgent
      parameters:
        - name: id
          in: path
          description: ID of the agent to launch.
          required: true
          type: integer
        - name: output
          in: query
          description: |
            This allows you to choose what type of response to receive.

            * `json` - todo
            * `result-object` - todo
            * `first-result-object` - todo
            * `result-object-with-output` - todo
            * `event-stream` - todo
            * `raw` - todo
          required: false
          enum:
            - json
            - result-object
            - first-result-object
            - result-object-with-output
            - event-stream
            - raw
          type: string
        - name: command
          in: query
          description: |
            Command to use when launching the agent (optional).

            * `casperjs` - todo
            * `phantomjs` - todo
            * `node` - todo
          required: false
          type: string
          enum:
            - casperjs
            - phantomjs
            - node
        - name: argument
          in: query
          type: string
          required: false
          description: >-
            JSON argument as a String.The argument can be retrieved with
            buster.argument in the agent’s script.
        - name: saveLaunchOptions
          in: query
          type: string
          required: false
          description: >-
            If present and not empty, `command` and `argument` will be saved as
            the default launch options for the agent.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  '/agent/{id}/abort':
    post:
      tags:
        - Agent
      description: Abort all running instances of the agent.
      operationId: abortAgent
      parameters:
        - name: id
          in: path
          description: ID of the agent to stop.
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponseNull'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  '/agent/{id}/output':
    get:
      tags:
        - Agent
      description: >-
        Get data from an agent: console output, status, progress and messages.
        This API endpoint is specifically designed so that it’s easy to get
        incremental data from an agent.
      operationId: outputAgent
      parameters:
        - name: id
          in: path
          description: >-
            ID of the agent from which to retrieve the output, status and
            messages.
          required: true
          type: integer
        - name: mode
          in: query
          description: >
            This allows you to choose what type of response to receive.


            * `track` -  the console output from a particular instance is
            returned, as specified by the containerId parameter.

            * `most-recent` - the most recent instance is selected each time a
            request is made.
          required: false
          enum:
            - track
            - most-recent
          type: string
        - name: containerId
          in: query
          description: ID of the instance from which to get console output.
          required: false
          type: number
        - name: fromMessageId
          in: query
          description: Return the agent’s messages starting from this ID.
          required: false
          type: number
        - name: fromOutputPos
          in: query
          description: Return the agent’s console output starting from this position.
          required: false
          type: number
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  '/agent/{id}/containers':
    get:
      tags:
        - Agent
      description: >-
        Get a list of ended containers for an agent, ordered by date. Useful for
        listing the last available output logs from an agent.
      operationId: containerAgent
      parameters:
        - name: id
          in: path
          description: ID of the agent from which to retrieve the containers.
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  '/script/by-id/{mode}/{id}':
    get:
      tags:
        - Script
      description: Get a script record by its ID.
      operationId: getScriptById
      parameters:
        - name: id
          in: path
          description: ID of the script to retrieve.
          required: true
          type: integer
        - name: mode
          in: path
          description: JSON or raw text.
          required: true
          type: string
          enum:
            - json
            - raw
        - name: withoutText
          in: query
          description: >-
            If present and not empty, do not send the script’s contents but only
            its metadata (only in JSON mode).
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  '/script/by-name/{mode}/{name}':
    get:
      tags:
        - Script
      description: Get a script record by its name.
      operationId: getScriptByName
      parameters:
        - name: name
          in: path
          description: 'Name of the script to retrieve, with its extension (.js or .coffee).'
          required: true
          type: string
        - name: mode
          in: path
          description: JSON or raw text.
          required: true
          type: string
          enum:
            - json
            - raw
        - name: withoutText
          in: query
          description: >-
            If present and not empty, do not send the script’s contents but only
            its metadata (only in JSON mode).
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  /scripts.json:
    get:
      tags:
        - Script
      description: Get the list of all your scripts without text.
      operationId: listScripts
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  '/script/delete/{id}':
    delete:
      tags:
        - Script
      description: Delete one of your script.
      operationId: deleteScript
      parameters:
        - name: id
          in: path
          description: ID of the script to delete.
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponseNull'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  '/script/{name}':
    post:
      tags:
        - Script
      description: >-
        Update an existing script or create a new one if it does not exist (in
        this case, the new script ID is returned in the data field).
      operationId: updateScript
      parameters:
        - name: name
          in: path
          description: >-
            Name of the script to update or create, with its extension (.js or
            .coffee).
          required: true
          type: string
        - name: text
          in: query
          description: >-
            Full text contents of the script. This parameter must be in the
            request body in x-www-form-urlencoded format.
          required: true
          type: string
        - name: insertOnly
          in: query
          description: >-
            If present and not empty, make sure that we don’t update an existing
            script (optional). An error will be returned if a script with the
            same name already exists.
          required: false
          type: string
        - name: source
          in: query
          description: >-
            Optional String describing from where the script comes from.
            Reserved sources keywords are phantombuster, web, sdk and bot
            builder. Only 20 alpha-numeric characters (and space) are allowed.
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponseNumber'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
  /user:
    get:
      tags:
        - User
      description: Get information about your Phantombuster account and your agents.
      operationId: getUser
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessApiResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FailApiResponse'
      security:
        - internalApiKey: []
securityDefinitions:
  internalApiKey:
    type: apiKey
    in: header
    name: X-Phantombuster-Key-1
definitions:
  SuccessApiResponse:
    type: object
    properties:
      status:
        type: string
      data:
        type: object
  FailApiResponse:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
  SuccessApiResponseNull:
    type: object
    properties:
      status:
        type: string
      data:
        example: null
  SuccessApiResponseNumber:
    type: object
    properties:
      status:
        type: string
      data:
        type: number
